package com.group15.geospatial;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;
import org.apache.spark.api.java.function.FlatMapFunction;

import com.vividsolutions.jts.geom.Coordinate;
import com.group15.geospatial.DDSConvexHull;
import com.group15.utils.Config;
import com.group15.utils.Constant;
class globalFarthest implements FlatMapFunction<Iterator<String>, Coordinate>, Serializable{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public Iterable<Coordinate> call(Iterator<String> convexHull)
			throws Exception {
		double max = 0.0;
		List<Coordinate> convexList = new ArrayList<Coordinate>();
		List<Coordinate> finalResult = new ArrayList<Coordinate>();
		while(convexHull.hasNext())
		{
			String point = convexHull.next();
			String[] coords = point.split(",");
			Coordinate coord = new Coordinate(Double.parseDouble(coords[0]), Double.parseDouble(coords[1]));
			convexList.add(coord);
		}
		for(Coordinate primCoord: convexList){
			for(Coordinate secCoord: convexList){
				if(primCoord.distance(secCoord) > max){
					finalResult = new ArrayList<Coordinate>();
					max = primCoord.distance(secCoord);
					finalResult.add(primCoord);
					finalResult.add(secCoord);
				}
			}
		}
		
		return finalResult;
	}
}
class CoordinateSave implements FlatMapFunction<Iterator<Coordinate>, String>, Serializable{
	public Iterable<String> call(Iterator<Coordinate> coordinates) throws Exception {
		List<String> coords = new ArrayList<String>();
		while(coordinates.hasNext()){
			Coordinate coord = coordinates.next();
			String coordString = coord.x + "," + coord.y;
			coords.add(coordString);
		}
		return coords;
	}
}

public class DDSFarthestPoint implements Constant {
	public static void main(String[] args) throws ClassNotFoundException
	{
		SparkConf conf = new SparkConf().setAppName("App").setMaster(spark_path);
		JavaSparkContext context = new JavaSparkContext(conf);
		Config.copyFileToHDFS(farthestpair_input_path);
		JavaRDD<String> lines = DDSConvexHull.getConvexHull(context,hadoop_path+farthestpair_input_path);
		JavaRDD<Coordinate> farthestPoints = lines.mapPartitions(new globalFarthest());
                JavaRDD<String> coordsString = farthestPoints.mapPartitions(new CoordinateSave());
		Config.deleteIfExist(hadoop_path+farthestpair_output_path);
		coordsString.saveAsTextFile(hadoop_path+farthestpair_output_path);
		context.close();
		
	}
}